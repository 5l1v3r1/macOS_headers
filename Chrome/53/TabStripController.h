//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  3 2014 10:55:11).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "HasWeakBrowserPointer.h"
#import "TabControllerTarget.h"
#import "URLDropTargetController.h"

@class NSView, NewTabButton, TabView;

@interface TabStripController : NSObject <TabControllerTarget, URLDropTargetController, HasWeakBrowserPointer>
{
    struct scoped_nsobject<TabStripView> tabStripView_;
    NSView *switchView_;
    struct scoped_nsobject<NSView> dragBlockingView_;
    NewTabButton *newTabButton_;
    struct scoped_nsobject<TabStripDragController> dragController_;
    struct scoped_nsobject<CrTrackingArea> newTabTrackingArea_;
    struct unique_ptr<TabStripModelObserverBridge, std::__1::default_delete<TabStripModelObserverBridge>> bridge_;
    struct Browser *browser_;
    struct TabStripModel *tabStripModel_;
    id <TabStripControllerDelegate> delegate_;
    BOOL newTabButtonShowingHoverImage_;
    scoped_nsobject_9420f295 tabContentsArray_;
    scoped_nsobject_9420f295 tabArray_;
    struct scoped_nsobject<NSMutableSet> closingControllers_;
    TabView *placeholderTab_;
    struct CGRect placeholderFrame_;
    struct CGRect droppedTabFrame_;
    struct scoped_nsobject<NSMutableDictionary> targetFrames_;
    struct CGRect newTabTargetFrame_;
    BOOL forceNewTabButtonHidden_;
    BOOL initialLayoutComplete_;
    float availableResizeWidth_;
    struct scoped_nsobject<CrTrackingArea> trackingArea_;
    TabView *hoveredTab_;
    struct scoped_nsobject<NSView> toolTipView_;
    scoped_nsobject_9420f295 permanentSubviews_;
    struct scoped_nsobject<NSImage> defaultFavicon_;
    double leftIndentForControls_;
    double rightIndentForControls_;
    BOOL mouseInside_;
    struct unique_ptr<HoverTabSelector, std::__1::default_delete<HoverTabSelector>> hoverTabSelector_;
    struct scoped_nsobject<CustomWindowControlsView> customWindowControls_;
    struct scoped_nsobject<CrTrackingArea> customWindowControlsTrackingArea_;
}

+ (double)tabOverlap;
+ (double)defaultLeftIndentForControls;
+ (double)defaultTabHeight;
@property(nonatomic) double rightIndentForControls; // @synthesize rightIndentForControls=rightIndentForControls_;
@property(nonatomic) double leftIndentForControls; // @synthesize leftIndentForControls=leftIndentForControls_;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)themeDidChangeNotification:(id)arg1;
- (int)alertStateForContents:(struct WebContents *)arg1;
- (BOOL)doesAnyOtherWebContents:(struct WebContents *)arg1 haveAlertState:(int)arg2;
- (void)updateWindowAlertState:(int)arg1 forWebContents:(struct WebContents *)arg2;
- (void)removeCustomWindowControls;
- (void)addCustomWindowControls;
- (id)activeTabContentsController;
- (BOOL)isUnsupportedDropData:(id)arg1;
- (void)hideDropURLsIndicatorInView:(id)arg1;
- (void)indicateDropURLsInView:(id)arg1 at:(struct CGPoint)arg2;
- (void)dropText:(id)arg1 inView:(id)arg2 at:(struct CGPoint)arg3;
- (void)dropURLs:(id)arg1 inView:(id)arg2 at:(struct CGPoint)arg3;
- (void)openURL:(struct GURL *)arg1 inView:(id)arg2 at:(struct CGPoint)arg3;
- (void)droppingURLsAt:(struct CGPoint)arg1 givesIndex:(long long *)arg2 disposition:(int *)arg3;
- (void)regenerateSubviewList;
- (void)addSubviewToPermanentList:(id)arg1;
- (void)setNewTabButtonHoverState:(BOOL)arg1;
- (void)setTabTrackingAreasEnabled:(BOOL)arg1;
@property(nonatomic) TabView *hoveredTab;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (BOOL)tabDraggingAllowed;
- (BOOL)inRapidClosureMode;
- (void)tabUpdateTracking:(id)arg1;
- (void)tabViewFrameChanged:(id)arg1;
- (void)dropWebContents:(struct WebContents *)arg1 atIndex:(int)arg2 withFrame:(struct CGRect)arg3 asPinnedTab:(BOOL)arg4 activate:(BOOL)arg5;
- (void)moveTabFromIndex:(long long)arg1;
- (int)indexOfPlaceholder;
- (id)activeTabView;
- (id)tabViews;
- (struct TabStripModel *)tabStripModel;
- (void)setFrame:(struct CGRect)arg1 ofTabView:(id)arg2;
- (void)tabPinnedStateChangedWithContents:(struct WebContents *)arg1 atIndex:(long long)arg2;
- (void)tabMovedWithContents:(struct WebContents *)arg1 fromIndex:(long long)arg2 toIndex:(long long)arg3;
- (void)tabChangedWithContents:(struct WebContents *)arg1 atIndex:(long long)arg2 changeType:(int)arg3;
- (void)updateIconsForContents:(struct WebContents *)arg1 atIndex:(long long)arg2;
- (id)iconImageForContents:(struct WebContents *)arg1;
- (void)tabDetachedWithContents:(struct WebContents *)arg1 atIndex:(long long)arg2;
- (void)startClosingTabWithAnimation:(id)arg1;
- (void)animationDidStop:(id)arg1 forController:(id)arg2 finished:(BOOL)arg3;
- (void)removeTab:(id)arg1;
- (void)tabReplacedWithContents:(struct WebContents *)arg1 previousContents:(struct WebContents *)arg2 atIndex:(long long)arg3;
- (void)tabSelectionChanged;
- (void)activateTabWithContents:(struct WebContents *)arg1 previousContents:(struct WebContents *)arg2 atIndex:(long long)arg3 reason:(int)arg4;
- (void)tabDeactivatedWithContents:(struct WebContents *)arg1;
- (void)insertTabWithContents:(struct WebContents *)arg1 atIndex:(long long)arg2 inForeground:(_Bool)arg3;
- (void)setTabTitle:(id)arg1 withContents:(struct WebContents *)arg2;
- (void)layoutTabsWithoutAnimation;
- (void)layoutTabs;
- (void)layoutTabsWithAnimation:(BOOL)arg1 regenerateSubviews:(BOOL)arg2;
- (void)showNewTabButton:(BOOL)arg1;
- (double)tabAreaRightEdge;
- (BOOL)isTabFullyVisible:(id)arg1;
- (BOOL)isDragSessionActive;
- (void)insertPlaceholderForTab:(id)arg1 frame:(struct CGRect)arg2;
- (id)dragController;
- (struct SimpleMenuModel *)contextMenuModelForController:(id)arg1 menuDelegate:(struct Delegate *)arg2;
- (BOOL)isCommandEnabled:(int)arg1 forController:(id)arg2;
- (void)commandDispatch:(int)arg1 forController:(id)arg2;
- (void)closeTab:(id)arg1;
- (void)toggleMute:(id)arg1;
- (void)selectTab:(id)arg1;
- (unsigned long long)viewsCount;
- (id)viewAtIndex:(unsigned long long)arg1;
- (id)selectedViews;
- (long long)modelIndexForContentsView:(id)arg1;
- (long long)modelIndexForTabView:(id)arg1;
- (long long)modelIndexFromIndex:(long long)arg1;
- (long long)indexFromModelIndex:(long long)arg1;
- (long long)numberOfOpenNonPinnedTabs;
- (long long)numberOfOpenPinnedTabs;
- (long long)numberOfOpenTabs;
- (void)clickNewTabButton:(id)arg1;
- (id)newTab;
- (void)swapInTabAtIndex:(long long)arg1;
- (void)browserWillBeDestroyed;
- (void)dealloc;
- (id)initWithView:(id)arg1 switchView:(id)arg2 browser:(struct Browser *)arg3 delegate:(id)arg4;

@end

